# Generated by Django 3.1.7 on 2021-05-24 20:14

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('account', models.CharField(max_length=40, unique=True, verbose_name='account')),
                ('password', models.CharField(max_length=40, verbose_name='password')),
                ('education', models.CharField(choices=[('1', '专科'), ('2', '本科'), ('3', '211'), ('4', '985')], default='1', max_length=40, verbose_name='education')),
                ('english', models.CharField(choices=[('1', '四级以下'), ('2', '四级'), ('3', '六级'), ('4', '六级以上')], default='1', max_length=40, verbose_name='english')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=40, verbose_name='phone')),
                ('info', models.TextField()),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'employee',
                'db_table': 'Employee',
            },
        ),
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('account', models.CharField(max_length=40, unique=True)),
                ('password', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=40, verbose_name='phone')),
                ('info', models.TextField()),
            ],
            options={
                'verbose_name': 'enterprise',
                'verbose_name_plural': 'enterprise',
                'db_table': 'Enterprise',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('salary', models.IntegerField(default=0, verbose_name='salary')),
                ('city', models.CharField(choices=[('1', 'Beijing'), ('2', 'Shanghai'), ('3', 'Guangzhou')], default='1', max_length=40, verbose_name='city')),
                ('educationWeight', models.IntegerField(default=1, verbose_name='educationWeight')),
                ('englishWeight', models.IntegerField(default=1, verbose_name='englishWeight')),
                ('questionSource', models.CharField(choices=[('0', 'system'), ('1', 'enterprise')], default='0', max_length=1, verbose_name='questionSource')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.enterprise')),
            ],
            options={
                'verbose_name': 'job',
                'verbose_name_plural': 'job',
                'db_table': 'Job',
            },
        ),
        migrations.CreateModel(
            name='PersonalityQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='title')),
                ('choiceA', models.CharField(max_length=40, verbose_name='A')),
                ('choiceB', models.CharField(max_length=40, verbose_name='B')),
                ('choiceC', models.CharField(max_length=40, verbose_name='C')),
                ('choiceD', models.CharField(max_length=40, verbose_name='D')),
                ('aspect', models.CharField(choices=[('1', 'E-I'), ('2', 'S-N'), ('3', 'T-F'), ('4', 'J-P')], default='1', max_length=40, verbose_name='aspect')),
                ('scoreA', models.IntegerField(default=1, verbose_name='scoreA')),
                ('scoreB', models.IntegerField(default=2, verbose_name='scoreB')),
                ('scoreC', models.IntegerField(default=3, verbose_name='scoreC')),
                ('scoreD', models.IntegerField(default=4, verbose_name='scoreD')),
            ],
            options={
                'verbose_name': 'personalityQuestion',
                'verbose_name_plural': 'personalityQuestion',
                'db_table': 'PersonalityQuestion',
            },
        ),
        migrations.CreateModel(
            name='SkillGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.job')),
            ],
            options={
                'verbose_name': 'skillGrade',
                'verbose_name_plural': 'skillGrade',
                'db_table': 'SkillGrade',
            },
        ),
        migrations.CreateModel(
            name='SkillQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='title')),
                ('choiceA', models.CharField(max_length=40, verbose_name='A')),
                ('choiceB', models.CharField(max_length=40, verbose_name='B')),
                ('choiceC', models.CharField(max_length=40, verbose_name='C')),
                ('choiceD', models.CharField(max_length=40, verbose_name='D')),
                ('level', models.CharField(choices=[('1', '简单'), ('2', '一般'), ('3', '困难')], default='1', max_length=40, verbose_name='level')),
                ('aspect', models.CharField(choices=[('1', 'Java'), ('2', 'Python'), ('3', 'Mysql'), ('4', 'Web')], default='1', max_length=40, verbose_name='aspect')),
                ('answer', models.CharField(choices=[('1', 'A'), ('2', 'B'), ('3', 'C'), ('4', 'D')], max_length=40, verbose_name='answer')),
                ('score', models.IntegerField(default=1, verbose_name='score')),
                ('enterpriseID', models.IntegerField(default=0, verbose_name='enterpriseID')),
            ],
            options={
                'verbose_name': 'skillQuestion',
                'verbose_name_plural': 'skillQuestion',
                'db_table': 'SkillQuestion',
            },
        ),
        migrations.CreateModel(
            name='SkillScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aspect', models.CharField(choices=[('1', 'Java'), ('2', 'Python'), ('3', 'Mysql'), ('4', 'Web')], default='1', max_length=40, verbose_name='aspect')),
                ('score', models.IntegerField(default=0, verbose_name='score')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.skillgrade')),
            ],
            options={
                'verbose_name': 'skillScore',
                'verbose_name_plural': 'skillScore',
                'db_table': 'SkillScore',
            },
        ),
        migrations.CreateModel(
            name='SkillRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aspect', models.CharField(choices=[('1', 'Java'), ('2', 'Python'), ('3', 'Mysql'), ('4', 'Web')], default='1', max_length=40, verbose_name='aspect')),
                ('level', models.CharField(choices=[('1', '简单'), ('2', '一般'), ('3', '困难')], default='1', max_length=40, verbose_name='level')),
                ('weight', models.IntegerField(default=1, verbose_name='weight')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.job')),
            ],
            options={
                'verbose_name': 'skillRequest',
                'verbose_name_plural': 'skillRequest',
                'db_table': 'SkillRequest',
            },
        ),
        migrations.CreateModel(
            name='SkillPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.job')),
                ('pid', models.ManyToManyField(to='assessment.SkillQuestion')),
            ],
            options={
                'verbose_name': 'skillPaper',
                'verbose_name_plural': 'skillPaper',
                'db_table': 'SkillPaper',
            },
        ),
        migrations.AddField(
            model_name='skillgrade',
            name='paper',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assessment.skillpaper'),
        ),
        migrations.CreateModel(
            name='PersonalityRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('0', 'ESTJ大男人型'), ('1', 'ESTP挑战型'), ('10', 'ESFJ主人型'), ('11', 'ESFP表演型'), ('100', 'ENTJ将军型'), ('101', 'ENTP发明家型'), ('110', 'ENFJ教育家型'), ('111', 'ENFP记者型'), ('1000', 'ISTJ公务型'), ('1001', 'ISTP冒险家型'), ('1010', 'ISFJ照顾型'), ('1011', 'ISFP艺术家型'), ('1100', 'INTJ专家型'), ('1101', 'INTP学者型'), ('1110', 'INFJ作家型'), ('1111', 'INFP哲学家型')], default='0', max_length=40, verbose_name='personality')),
                ('EIweight', models.IntegerField(default=1, verbose_name='EIweight')),
                ('SNweight', models.IntegerField(default=1, verbose_name='SNweight')),
                ('TFweight', models.IntegerField(default=1, verbose_name='TFweight')),
                ('JPweight', models.IntegerField(default=1, verbose_name='JPweight')),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assessment.job')),
            ],
            options={
                'verbose_name': 'personalityRequest',
                'verbose_name_plural': 'personalityRequest',
                'db_table': 'PersonalityRequest',
            },
        ),
        migrations.CreateModel(
            name='PersonalityPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeName', models.CharField(max_length=40)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assessment.employee')),
                ('pid', models.ManyToManyField(to='assessment.PersonalityQuestion')),
            ],
            options={
                'verbose_name': 'personalityPaper',
                'verbose_name_plural': 'personalityPaper',
                'db_table': 'PersonalityPaper',
            },
        ),
        migrations.CreateModel(
            name='PersonalityGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gradeEI', models.IntegerField(default=0)),
                ('gradeSN', models.IntegerField(default=0)),
                ('gradeTF', models.IntegerField(default=0)),
                ('gradeJP', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('0', 'ESTJ大男人型'), ('1', 'ESTP挑战型'), ('10', 'ESFJ主人型'), ('11', 'ESFP表演型'), ('100', 'ENTJ将军型'), ('101', 'ENTP发明家型'), ('110', 'ENFJ教育家型'), ('111', 'ENFP记者型'), ('1000', 'ISTJ公务型'), ('1001', 'ISTP冒险家型'), ('1010', 'ISFJ照顾型'), ('1011', 'ISFP艺术家型'), ('1100', 'INTJ专家型'), ('1101', 'INTP学者型'), ('1110', 'INFJ作家型'), ('1111', 'INFP哲学家型')], default='1', max_length=40, verbose_name='type')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assessment.employee')),
            ],
            options={
                'verbose_name': 'personalityGrade',
                'verbose_name_plural': 'personalityGrade',
                'db_table': 'PersonalityGrade',
            },
        ),
        migrations.CreateModel(
            name='MessageInform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time')),
                ('mode', models.CharField(max_length=40, verbose_name='mode')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.job')),
            ],
        ),
        migrations.CreateModel(
            name='MessageApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.job')),
            ],
        ),
        migrations.CreateModel(
            name='MatchingScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0, verbose_name='score')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.job')),
            ],
        ),
    ]
